version: '{branch}-{build}'

branches:
  except:
    - ubuntu-build

environment:
  matrix:
  # MinGW x64
  - name: x64_mingw
    platform: x64
    qt: 5.12\mingw73_64
    image: Visual Studio 2015
    
  # MinGW x86
  - name: x86_mingw
    platform: x86
    qt: 5.11.3\mingw53_32
    image: Visual Studio 2015
    
  # MSVC x64
  - name: x64_msvc
    platform: x64
    qt: 5.12\msvc2017_64
    image: Visual Studio 2017
    
  # MSVC x86
  - name: x86_msvc
    platform: x86
    qt: 5.12\msvc2017
    image: Visual Studio 2017

init:
  - set PATH=C:\Qt\%qt%\bin;%PATH%
  - if %name%==x64_msvc call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat"
  - if %name%==x86_msvc call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars32.bat"

configuration:
  - Release

before_build:
  - git submodule update --init --recursive

build_script:
  - qmake GM-Companion.pro
  - if %name%==x64_msvc (nmake)
  - if %name%==x86_msvc (nmake)
  - if %name%==x64_msvc (nmake check)
  - if %name%==x86_msvc (nmake check)
  - if %name%==x64_mingw (C:\mingw-w64\x86_64-7.3.0-posix-seh-rt_v5-rev0\bin\mingw32-make.exe)
  - if %name%==x64_mingw (C:\MinGW\bin\mingw32-make.exe)

after_build:
  - windeployqt.exe --release --qmldir C:\Qt\%qt%\qml release\out\gm-companion.exe
  - cmd: copy /y "C:\OpenSSL-Win64\bin\*eay32.dll" release\out

artifacts:
  - path: release\out
    name: gm-companion-%platform%
    type: zip
