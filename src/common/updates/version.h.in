#pragma once

#include <QString>
#include <QVector>

#define CURRENT_VERSION QStringLiteral("@APP_VERSION_MAJOR@.@APP_VERSION_MINOR@.@APP_VERSION_PATCH@")
#define CURRENT_VERSION_TITLE QStringLiteral("@APP_VERSION_TITLE@")

class Version
{
public:
    enum class Suffix
    {
        Alpha = 0,
        Beta = 1,
        RC = 2,
        Other = 3,
        None = 4,
    };

    explicit Version(const QString &str);

    auto isGreater(const Version &other) const -> bool;
    static auto isGreater(const Version &first, const Version &second) -> bool;

private:
    static auto compare(const QVector<int> &first, const QVector<int> &second) -> int;
    static auto compare(Suffix suffix0, Suffix suffix1) -> int;
    static auto suffixFromString(const QString &str) -> Suffix;

    QVector<int> m_numbers;

    Suffix m_suffix = Suffix::None;
    int m_suffixVer = 0;
};
